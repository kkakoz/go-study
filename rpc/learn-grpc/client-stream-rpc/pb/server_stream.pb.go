// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server_stream.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StreamRequest struct {
	//流式请求参数
	StreamData           string   `protobuf:"bytes,1,opt,name=stream_data,json=streamData,proto3" json:"stream_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_359fb3680929a7dc, []int{0}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetStreamData() string {
	if m != nil {
		return m.StreamData
	}
	return ""
}

type SimpleResponse struct {
	// 流式响应数据
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleResponse) Reset()         { *m = SimpleResponse{} }
func (m *SimpleResponse) String() string { return proto.CompactTextString(m) }
func (*SimpleResponse) ProtoMessage()    {}
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_359fb3680929a7dc, []int{1}
}

func (m *SimpleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleResponse.Unmarshal(m, b)
}
func (m *SimpleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleResponse.Marshal(b, m, deterministic)
}
func (m *SimpleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleResponse.Merge(m, src)
}
func (m *SimpleResponse) XXX_Size() int {
	return xxx_messageInfo_SimpleResponse.Size(m)
}
func (m *SimpleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleResponse proto.InternalMessageInfo

func (m *SimpleResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SimpleResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*StreamRequest)(nil), "StreamRequest")
	proto.RegisterType((*SimpleResponse)(nil), "SimpleResponse")
}

func init() { proto.RegisterFile("server_stream.proto", fileDescriptor_359fb3680929a7dc) }

var fileDescriptor_359fb3680929a7dc = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x31, 0xcf, 0x82, 0x30,
	0x10, 0x86, 0x3f, 0xbe, 0x88, 0x86, 0x33, 0x62, 0x52, 0x1d, 0x88, 0x8b, 0x86, 0x89, 0xa9, 0x12,
	0xdd, 0x74, 0x53, 0xe3, 0xe4, 0x54, 0x36, 0x17, 0x52, 0xe4, 0x06, 0x12, 0xa0, 0xb5, 0x3d, 0xf8,
	0xfd, 0x26, 0xed, 0xc4, 0x76, 0xef, 0xe5, 0xcd, 0x3d, 0xcf, 0xc1, 0xc6, 0xa2, 0x19, 0xd1, 0x94,
	0x96, 0x0c, 0xca, 0x8e, 0x6b, 0xa3, 0x48, 0xa5, 0x39, 0xac, 0x0a, 0x97, 0x05, 0x7e, 0x07, 0xb4,
	0xc4, 0xf6, 0xb0, 0xf4, 0x85, 0xb2, 0x96, 0x24, 0x93, 0xe0, 0x10, 0x64, 0x91, 0x00, 0xbf, 0x7a,
	0x48, 0x92, 0xe9, 0x05, 0xe2, 0xa2, 0xe9, 0x74, 0x8b, 0x02, 0xad, 0x56, 0xbd, 0x45, 0xc6, 0x60,
	0xf6, 0x51, 0x35, 0xba, 0x6e, 0x28, 0xdc, 0xcc, 0xb6, 0x10, 0x8e, 0xb2, 0x1d, 0x30, 0xf9, 0x77,
	0x07, 0x7c, 0x38, 0x3d, 0x81, 0xdd, 0xdb, 0x06, 0x7b, 0xf2, 0xcc, 0xc2, 0x09, 0xb1, 0x1c, 0x22,
	0xa1, 0x06, 0xc2, 0x57, 0x63, 0x89, 0xc5, 0x7c, 0xe2, 0xb3, 0x5b, 0xf3, 0x29, 0x2d, 0xfd, 0xcb,
	0x82, 0xdb, 0xe2, 0x1d, 0xf2, 0xe3, 0x55, 0x57, 0xd5, 0xdc, 0x7d, 0x71, 0xfe, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x59, 0x00, 0x66, 0xdb, 0xdc, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClientStreamServerClient is the client API for ClientStreamServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientStreamServerClient interface {
	RouteList(ctx context.Context, opts ...grpc.CallOption) (ClientStreamServer_RouteListClient, error)
}

type clientStreamServerClient struct {
	cc *grpc.ClientConn
}

func NewClientStreamServerClient(cc *grpc.ClientConn) ClientStreamServerClient {
	return &clientStreamServerClient{cc}
}

func (c *clientStreamServerClient) RouteList(ctx context.Context, opts ...grpc.CallOption) (ClientStreamServer_RouteListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ClientStreamServer_serviceDesc.Streams[0], "/ClientStreamServer/RouteList", opts...)
	if err != nil {
		return nil, err
	}
	x := &clientStreamServerRouteListClient{stream}
	return x, nil
}

type ClientStreamServer_RouteListClient interface {
	Send(*StreamRequest) error
	CloseAndRecv() (*SimpleResponse, error)
	grpc.ClientStream
}

type clientStreamServerRouteListClient struct {
	grpc.ClientStream
}

func (x *clientStreamServerRouteListClient) Send(m *StreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *clientStreamServerRouteListClient) CloseAndRecv() (*SimpleResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SimpleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ClientStreamServerServer is the server API for ClientStreamServer service.
type ClientStreamServerServer interface {
	RouteList(ClientStreamServer_RouteListServer) error
}

func RegisterClientStreamServerServer(s *grpc.Server, srv ClientStreamServerServer) {
	s.RegisterService(&_ClientStreamServer_serviceDesc, srv)
}

func _ClientStreamServer_RouteList_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ClientStreamServerServer).RouteList(&clientStreamServerRouteListServer{stream})
}

type ClientStreamServer_RouteListServer interface {
	SendAndClose(*SimpleResponse) error
	Recv() (*StreamRequest, error)
	grpc.ServerStream
}

type clientStreamServerRouteListServer struct {
	grpc.ServerStream
}

func (x *clientStreamServerRouteListServer) SendAndClose(m *SimpleResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *clientStreamServerRouteListServer) Recv() (*StreamRequest, error) {
	m := new(StreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ClientStreamServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ClientStreamServer",
	HandlerType: (*ClientStreamServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RouteList",
			Handler:       _ClientStreamServer_RouteList_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "server_stream.proto",
}
